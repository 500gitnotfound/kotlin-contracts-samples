buildscript {
    ext.kotlinVersion =  '1.3.30-dev-245'

    repositories {
        mavenCentral()
        maven { url "https://dl.bintray.com/kotlin/kotlin-dev" }
    }

    dependencies {
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion")
    }
}

apply plugin: 'kotlin'

group 'kotlin-contracts-samples'
version '1.0'

repositories {
    mavenCentral()
    maven { url "https://dl.bintray.com/kotlin/kotlin-dev" }
}

/*
 * This configurations used for configuring contracts
 */
configurations {
    // configuration for package with core contract plugin
    kotlinContracts
    // configuration for packages with contracts subplugins
    contractPlugin
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    
    // package with core contextual contracts dsl
    compile "org.jetbrains.kotlin:kotlin-contracts-dsl:$kotlinVersion"
    
    // package with contracts subplugin dsl
    compile "org.jetbrains.kotlin:kotlin-contracts-subplugins-dsl:$kotlinVersion"
    // compile "another contracts subplugin dsl"

    kotlinContracts "org.jetbrains.kotlin:kotlin-contracts:$kotlinVersion"
    contractPlugin "org.jetbrains.kotlin:kotlin-contracts-subplugins:$kotlinVersion"
    // contractPlugin "another contracts subplugin"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"

    /*
     * This is a magic that registers contracts plugins in compiler
     */
    doFirst {
        def contractPlugin = configurations.kotlinContracts
        for (file in contractPlugin.asCollection()) {
            def dep = contractPlugin.dependencies.first()
            def path = file.absolutePath
            if (path.endsWith("${dep.name}-${dep.version}.jar")) {
                kotlinOptions.freeCompilerArgs += ['-XXLanguage:+ContextualEffects', "-Xplugin=${path}"]
            }
        }

        def subplugins = configurations.contractPlugin
        for (file in subplugins.asCollection()) {
            def path = file.absolutePath
            for (dep in subplugins.dependencies) {
                if (path.endsWith("${dep.name}-${dep.version}.jar")) {
                    kotlinOptions.freeCompilerArgs += ['-P', "plugin:org.jetbrains.kotlin.contracts:contract=${path}"]
                }
            }
        }
        
        println(kotlinOptions.freeCompilerArgs)
    }
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"

    doFirst {
        def contractPlugin = configurations.kotlinContracts
        for (file in contractPlugin.asCollection()) {
            def dep = contractPlugin.dependencies.first()
            def path = file.absolutePath
            if (path.endsWith("${dep.name}-${dep.version}.jar")) {
                kotlinOptions.freeCompilerArgs += ['-XXLanguage:+ContextualEffects', "-Xplugin=${path}"]
            }
        }

        def subplugins = configurations.contractPlugin
        for (file in subplugins.asCollection()) {
            def path = file.absolutePath
            for (dep in subplugins.dependencies) {
                if (path.endsWith("${dep.name}-${dep.version}.jar")) {
                    kotlinOptions.freeCompilerArgs += ['-P', "plugin:org.jetbrains.kotlin.contracts:contract=${path}"]
                }
            }
        }
    }
}

